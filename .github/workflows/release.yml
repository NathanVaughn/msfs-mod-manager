on:
  push:
    tags:
      - "v*"

name: Publish Release

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Parse version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v4

      - name: Cache Poetry
        uses: actions/cache@v2
        id: cache-poetry
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-

      - name: Setup Dependencies
        run: poetry install

      - name: Build
        shell: pwsh
        run: ./scripts/build.ps1 -installer

      - name: Zip Build
        shell: pwsh
        run: Compress-Archive -Path "./dist/MSFSModManager" -DestinationPath "./dist/MSFSModManagerPortable"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ github.event.commit_comment }}
          draft: false
          prerelease: false

      - name: Add Portable Executable Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/MSFSModManagerPortable.zip
          asset_name: MSFSModManagerPortable${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip

      - name: Add Installer Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/MSFSModManagerSetup.exe
          asset_name: MSFSModManagerSetup${{ steps.get_version.outputs.VERSION }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable
